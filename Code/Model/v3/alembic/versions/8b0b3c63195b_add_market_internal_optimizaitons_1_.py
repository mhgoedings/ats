"""add market_internal_optimizaitons 1 table

Revision ID: 8b0b3c63195b
Revises: c0c45ea44ced
Create Date: 2018-11-08 09:55:57.545760

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8b0b3c63195b'
down_revision = 'c0c45ea44ced'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('market_internal_optimizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('strat_id', sa.Integer(), nullable=True),
    sa.Column('sec_id', sa.Integer(), nullable=True),
    sa.Column('symbol', sa.String(length=12), nullable=True),
    sa.Column('mi_switch', sa.String(length=12), nullable=True),
    sa.Column('mi_parameter', sa.String(length=12), nullable=True),
    sa.Column('entry_exit_both', sa.String(length=12), nullable=True),
    sa.Column('resetOnDayBeginning', sa.String(length=12), nullable=True),
    sa.Column('resetAfterExit', sa.String(length=12), nullable=True),
    sa.ForeignKeyConstraint(['sec_id'], ['markets.id'], ),
    sa.ForeignKeyConstraint(['strat_id'], ['strategies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('candidate_tmps')
    op.create_foreign_key(None, 'strategies', 'market_internals', ['mi_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'strategies', type_='foreignkey')
    op.create_table('candidate_tmps',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('test_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('proto_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sec_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('symbol', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('template_file', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('strategy_name', sa.VARCHAR(length=250), autoincrement=False, nullable=False),
    sa.Column('session_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timeframe_1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timeframe_1_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('timeframe_2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('timeframe_2_unit', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('fitness_function', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('max_days_back', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_dt', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('end_dt', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('use_second_data', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('lsb', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('trades_per_day', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('day_swing', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('poi_switch', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('poi_n1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('natr', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fract', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True),
    sa.Column('t_segment', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filter_1_switch', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filter_1_n1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filter_1_n2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filter_2_switch', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filter_2_n1', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filter_2_n2', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sl_switch', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('stop_loss', sa.NUMERIC(precision=12, scale=5), autoincrement=False, nullable=True),
    sa.Column('pt_switch', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('profit_target', sa.NUMERIC(precision=12, scale=5), autoincrement=False, nullable=True),
    sa.Column('bt_start_dt', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('bt_end_dt', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('input_vars', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    sa.Column('optimization_string', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('status_state', sa.VARCHAR(length=12), autoincrement=False, nullable=True),
    sa.Column('start_run', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('end_run', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='candidate_tmps_pkey')
    )
    op.drop_table('market_internal_optimizations')
    # ### end Alembic commands ###
