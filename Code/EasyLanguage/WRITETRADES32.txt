{ User function: WriteTrades32
  Use this function to write out the trades generated by a trading system to a text file.
  This function is designed to provide the input files needed by Market System Analyzer 3.2. To
  use this function, call it as the last line in your trading system. Make sure the function
  call is outside of all loops and other control statements.
  
  INPUTS:
    TrRisk:	risk for current trade in dollars; should be positive. This number can be different
      for each trade if desired. TrRisk should be for the same number of contracts or shares as 
      the profit/loss.
    StopL: initial stop price for a long trade.
    StopS: initial stop price for a short trade.
	NATR:  Averaging period for average true range calculation.
    FName: full name of file for writing trade profit/loss and risk data to, including drive and 
      path; e.g., "C:\Futures\Data\out1.csv". This file, if already present, will be deleted 
      before being re-written.

  Notes: 
  1. It is not necessary to use both TrRisk and stop prices (StopL, StopS). Use one or
  the other to define the trade risk.
  2. The average true range (ATR) value output by this function is the value calculated on the bar
  immediately prior to the bar of entry for the trade.
  3. The symbol name is retrieved from the built-in TradeStation function GetSymbolName.

  OUTPUT:
  The function writes the entry and exit dates/times, trade profit/loss, risk, entry price, 
  exit price, stop price, size (contracts or shares), market position (long or short), symbol name, 
  and the average true range for each trade to the text file specified by FName. 
  The function returns the number of trades.
  
  Copyright 2006 - 2009 Adaptrade Software
 }
 input: TrRisk      (NumericSeries),    { risk for current trade }
        StopL       (NumericSimple),    { initial stop price for long trade }
        StopS       (NumericSimple),    { initial stop price for short trade }
        NATR        (NumericSimple),    { period for average true range }
        CurrConv    (NumericSimple),    { currency conversion factor }
        FName       (StringSimple);     { file name to write results to }
		
 Var:   TradePL   (0),                  { Trade profit/loss }
        NTrades   (0),                  { Number of trades } 
        EnDate    (0),                  { Entry date }
        ExDate    (0),                  { Exit date }
        EnTime    (0),                  { Entry time }
        ExTime    (0),                  { Exit time }
        EntPr     (0),                  { Entry price }
        ExPr      (0),                  { Exit price }
        StopPr    (0),                  { Stop price }
        NSize     (0),                  { size of position }
        NTNew     (0),                  { Number of new trades on current bar }
        MarkPos   (0),                  { market position }
        ATR       (0),                  { average true range }
        EntBar    (0),                  { bar of entry, to use with ATR }
        ATREnt    (0),                  { ATR value prior to entry }
        ii        (0),                  { loop counter }
        EnDT      (""),                 { Entry date/time string }
        ExDT      (""),                 { Exit date/time string }
        StrOut    ("");                 { output character string }

 if BarNumber = 1 then
    FileDelete(FName);

 ATR = Average(TrueRange, NATR);

 { Collect profit/loss and write out data to file }
 NTNew = TotalTrades - NTrades;
 If NTNew > 0 then Begin
    for ii = 0 to NTNew - 1 Begin
        EnDate = EntryDate(NTNew - ii);
        ExDate = ExitDate(NTNew - ii);
        EnTime = EntryTime(NTNew - ii);
        EntBar = FindBar(EnDate, EnTime);
        ATREnt = ATR[EntBar + 1];
        ExTime = ExitTime(NTNew - ii);
		TradePL = PositionProfit(NTNew - ii);
        EntPr = EntryPrice(NTNew - ii);
        ExPr = ExitPrice(NTNew - ii);
        NSize = MaxContracts(NTNew - ii);
        MarkPos = MarketPosition(NTNew - ii);
        if MarkPos > 0 then
           StopPr = StopL
        else if MarkPos < 0 then
           StopPr = StopS
        else
           StopPr = 0;
        EnDT = DateString3(EnDate, EnTime);
        ExDT = DateString3(ExDate, ExTime);
        StrOut = EnDT + "," + NumtoStr(EntPr, 4) + "," + ExDT + "," + NumtoStr(ExPr, 4) + "," + 
                 NumtoStr(StopPr, 4) + "," + NumtoStr(MarkPos, 0) + "," + NumtoStr(TradePL, 2) + 
                 "," + NumtoStr(TrRisk, 2) + "," + NumtoStr(NSize, 0) + "," + GetSymbolName +
                 "," + NumtoStr(ATREnt, 4) + "," + NumtoStr(CurrConv, 4) + Newline;
        FileAppend(FName, StrOut);
        NTrades = NTrades + 1;
	End;
 End;

 WriteTrades32 = NTrades;